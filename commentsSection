import React, { useState } from 'react';
import {
  Typography,
  IconButton,
  TextField,
  Button,
  Box,
  Paper
} from '@mui/material';
import { Add, AddCircleOutline } from '@mui/icons-material';
import Grid from "@mui/material/Grid2";

// Types
interface Comment {
  id: string;
  text: string;
}

interface CommentsSectionProps {
  comments: Comment[];
  onChange: (comments: Comment[]) => void;
  onAddComment: () => void;
}

const CommentsSection: React.FC<CommentsSectionProps> = ({ 
  comments, 
  onChange, 
  onAddComment 
}) => {
  // Function to add 5 comments at once
  const handleAdd5Comments = () => {
    const newComments = [];
    for (let i = 0; i < 5; i++) {
      newComments.push({
        id: `comment_${Date.now()}_${i}`,
        text: ''
      });
    }
    onChange([...comments, ...newComments]);
  };

  return (
    <Grid container spacing={3}>
      <Grid size={12} display="flex" justifyContent="space-between" alignItems="center">
        <Typography variant="subtitle2" sx={{ fontWeight: 600 }}>
          Comments ({comments.length})
        </Typography>
        <Box display="flex" gap={1}>
          <Button
            variant="outlined"
            size="small"
            startIcon={<AddCircleOutline />}
            onClick={handleAdd5Comments}
            sx={{
              textTransform: 'none',
              fontSize: '0.75rem',
              minWidth: 'auto',
              px: 1.5,
              py: 0.5
            }}
          >
            Add 5
          </Button>
          <IconButton 
            onClick={onAddComment} 
            color="primary"
            size="small"
            sx={{
              '&:hover': {
                backgroundColor: 'primary.lighter'
              }
            }}
          >
            <Add />
          </IconButton>
        </Box>
      </Grid>
      
      {comments.length === 0 ? (
        <Grid size={12}>
          <Paper 
            sx={{ 
              p: 3, 
              textAlign: 'center', 
              backgroundColor: '#f9f9f9',
              border: '1px dashed #ddd'
            }}
          >
            <Typography variant="body2" color="text.secondary">
              No comments yet. Click the + button to add a comment or "Add 5" to add multiple comments.
            </Typography>
          </Paper>
        </Grid>
      ) : (
        comments.map((comment, index) => (
          <Grid size={12} key={comment.id}>
            <TextField
              fullWidth
              multiline
              rows={2}
              placeholder={`Comment ${index + 1}...`}
              value={comment.text}
              onChange={(e) => {
                const newComments = [...comments];
                newComments[index].text = e.target.value;
                onChange(newComments);
              }}
              size="small"
              variant="outlined"
              sx={{
                '& .MuiOutlinedInput-root': {
                  backgroundColor: 'white',
                  '&:hover': {
                    '& .MuiOutlinedInput-notchedOutline': {
                      borderColor: 'primary.main'
                    }
                  }
                }
              }}
            />
          </Grid>
        ))
      )}
    </Grid>
  );
};

// Demo Component
const CommentsSectionDemo: React.FC = () => {
  const [comments, setComments] = useState<Comment[]>([]);

  const handleAddComment = () => {
    const newComment: Comment = {
      id: `comment_${Date.now()}`,
      text: ''
    };
    setComments([...comments, newComment]);
  };

  return (
    <Box sx={{ p: 4, maxWidth: 800, mx: 'auto' }}>
      <Typography variant="h5" sx={{ mb: 3, fontWeight: 600 }}>
        Comments Section Demo
      </Typography>
      
      <Paper sx={{ p: 3 }}>
        <CommentsSection
          comments={comments}
          onChange={setComments}
          onAddComment={handleAddComment}
        />
      </Paper>

      {/* Debug info */}
      <Box sx={{ mt: 3, p: 2, backgroundColor: '#f5f5f5', borderRadius: 1 }}>
        <Typography variant="subtitle2" sx={{ mb: 1 }}>
          Current Comments Data:
        </Typography>
        <pre style={{ fontSize: '0.75rem', margin: 0 }}>
          {JSON.stringify(comments, null, 2)}
        </pre>
      </Box>
    </Box>
  );
};

export default CommentsSection;
export { CommentsSectionDemo, type Comment };
